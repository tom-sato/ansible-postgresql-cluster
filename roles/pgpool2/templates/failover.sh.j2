#! /bin/bash
exec > >(logger -i -p {{ pgpool2_syslog_facility }}.notice -t $(basename $0)) 2>&1
set -e -x
detached_node_id=$1
detached_hostname=$2
detached_port=$3
detached_data_directory=$4
old_main_node_id=$5
new_main_node_id=$6
new_main_hostname=$7
old_primary_node_id=$8
new_main_port=$9
new_main_data_directory=${10}
detached_slot_name=${detached_hostname/-/_}
echo "failover starting..."
if [ $new_main_node_id -eq -1 ]; then
	echo "no node is available, failover skipped"
	exit 0
fi
if [ $detached_node_id -ne $old_primary_node_id ]; then
	{% if postgresql_use_replication_slot %}
	psql -c "SELECT pg_drop_replication_slot('$detached_slot_name') WHERE EXISTS (SELECT * FROM pg_replication_slots WHERE slot_name = '$detached_slot_name')" -h $new_main_hostname -p $new_main_port
	{% endif %}
	echo "detached node is not primary, failover skipped"
	exit 0
fi
ssh -T -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $new_main_hostname <<-EOF
	set -e -x
	/usr/pgsql-{{ postgresql_version }}/bin/pg_ctl promote -w -D $new_main_data_directory
EOF
echo "failover successfully completed"
